(window.webpackJsonp=window.webpackJsonp||[]).push([[7],{287:function(e,t,n){"use strict";n.r(t);n(105),n(140);var r={name:"Fibonacci",data:function(){return{n:0,fibOutput:0,fibSeq:[]}},methods:{callFib:function(){this.fibOutput=this.tabulatedFib(this.n)},RecursiveFib:function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:this.n;return this.fibOutput=e<=2?1:this.fib(e-1)+this.fib(e-2)},memoisedRecursiveFib:function(e){var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};return console.log(t),t[e]?t[e]:e<=2?1:(t[e]=this.memoisedRecursiveFib(e-1,t)+this.memoisedRecursiveFib(e-2,t),t[e])},tabulatedFib:function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:this.n,table=Array(parseInt(e)+1).fill(0);table[1]=1;for(var i=0;i<=e;i++)table[i+1]+=table[i],table[i+2]+=table[i];return this.fibSeq=table.splice(0,table.length-2),table[e]},iterativeFib:function(e){for(var i=0;i<=this.n;i++){var t=0;i>1?t=this.fibSeq[i-1]+this.fibSeq[i-2]:1==i&&(t=1),this.fibSeq[i]=t}return this.fibSeq[this.n]}}},o=n(55),component=Object(o.a)(r,(function(){var e=this,t=e.$createElement,n=e._self._c||t;return n("div",[n("h3",[e._v("Fibonacci Sequence")]),e._v(" "),n("p",[e._v("\n      n = 0,1,2,3,4,5,6,7,8,9,10\n      fib(n)=1,1,2,3,5,7,13,20\n  ")]),e._v(" "),n("label",{attrs:{for:"nInput"}},[e._v("Input number n")]),e._v(" "),n("input",{directives:[{name:"model",rawName:"v-model",value:e.n,expression:"n"}],attrs:{type:"number",id:"nInput"},domProps:{value:e.n},on:{keyup:function(t){return!t.type.indexOf("key")&&e._k(t.keyCode,"enter",13,t.key,"Enter")?null:e.callFib(t)},input:function(t){t.target.composing||(e.n=t.target.value)}}}),e._v(" "),n("p",[e._v(e._s(e.fibOutput))]),e._v(" "),n("p",[e._v(e._s(e.fibSeq))])])}),[],!1,null,null,null);t.default=component.exports}}]);